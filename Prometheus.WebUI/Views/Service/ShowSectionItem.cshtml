@using System.Web.Mvc.Html
@using Common.Dto
@using Common.Enums.Permissions
@using Prometheus.WebUI.Helpers
@model Prometheus.WebUI.Models.Service.ServiceSectionModel
@{
    ViewBag.Title = "Services";
    ViewBag.SubTitle = ServiceSectionHelper.ConvertRouteStringToFriendlyName(Model.Section);

    Layout = "~/Views/Shared/_SidebarLayout.cshtml";
    ViewBag.Links = new List<KeyValuePair<string, string>>
    {
        new KeyValuePair<string, string>("Home", "Home"),
        new KeyValuePair<string, string>("Services", "Service/Index"),
        new KeyValuePair<string, string>(Model.Service.Name, "Service/Show/" + ServiceSectionHelper.ConvertNavStringToRouteString(Model.Section) + "/" + Model.Service.Id),
        new KeyValuePair<string, string>(ViewBag.SubTitle, "#")
    };

    int userId;
    try { userId = int.Parse(Session["Id"].ToString()); }
    catch { return; } /*abort rendering */
                      /*used to indicate if add/edit buttons should be visible */
    bool controlAvail = UiPermissionHelper.HasPermission(userId, ServiceDetails.CanEditServiceDetails);
}

@section Sidebar
{

}

@section Content {

    <div class="title-div">
        @ViewBag.SubTitle
    </div>

    <div class="panel-div">

        @switch (Model.Section)
        {
            case "Options":
                var option = (ServiceOptionDto) Model.Service.ServiceOptions.FirstOrDefault(o => o.Id == Model.SectionItemId);
                if (option != null)
                {
                    @Html.Partial("PartialViews/ShowDynamicServiceItem", option)
					break;
				}
				goto default;
			case "Goals":
                @Html.Partial("PartialViews/ShowDynamicServiceItem", (ServiceGoalDto)Model.Service.ServiceGoals.FirstOrDefault(g => g.Id == Model.SectionItemId))
                break;
            case "Swot":
                @Html.Partial("PartialViews/ShowSwotItem", (ServiceSwotDto)Model.Service.ServiceSwots.FirstOrDefault(g => g.Id == Model.SectionItemId))
                break;
            case "SwotActivity":
                @Html.Action("ShowSwotActivity", Model.SectionItemId)
                break;
            case "WorkUnits":
                var workUnit = (ServiceWorkUnitDto) Model.Service.ServiceWorkUnits.FirstOrDefault(g => g.Id == Model.SectionItemId);
                if (workUnit != null)
                {
                    @Html.Partial("PartialViews/ShowDynamicServiceItem", workUnit)
                    break;
                }
                    goto default;
            case "Contracts":
                if (Model.Service.ServiceContracts != null && Model.Service.ServiceContracts.Any())
                {
                    @Html.Partial("PartialViews/ShowDynamicServiceItem", (ServiceContractDto)Model.Service.ServiceContracts.FirstOrDefault(g => g.Id == Model.SectionItemId))
                    break;
                }
                goto default;
            case "Measures":
                if (Model.Service.ServiceMeasures != null && Model.Service.ServiceMeasures.Any())
                {
                    @Html.Partial("PartialViews/ShowDynamicServiceItem", (ServiceMeasureDto)Model.Service.ServiceMeasures.FirstOrDefault(g => g.Id == Model.SectionItemId))
					break;
				}
				goto default;
			case "Processes":
				var process = (ServiceProcessDto)Model.Service.ServiceProcesses.FirstOrDefault(p => p.Id == Model.SectionItemId);
				if (process != null)
				{
					@Html.Partial("PartialViews/ShowDynamicServiceItem", process)
					break;
				}
				goto default;
			default:
				controlAvail = false;
                <div class="alert alert-danger">The data no is longer available.</div>
                break;
        }

    </div>

    <div class="flex-container">
        <div class="panel-footer">

            <div class="float-right-div">
                @Html.ActionLink("Back", "Show", new { section = Model.Section, id = Model.Service.Id }, new { @class = "btn-back btn btn-default" })

                @if (controlAvail)
                {
                    @Html.ActionLink("Update", "UpdateServiceSectionItem", new { id = Model.SectionItemId, serviceId = Model.Service.Id, section = Model.Section }, new { @class = "btn btn-primary" })

                    @Html.ActionLink("Delete", "ConfirmDeleteService" + ServiceSectionHelper.ConvertToRouteString(Model.Section) + "Item", new { id = Model.SectionItemId }, new { @class = "btn btn-danger", style = "margin-left:5px;" })
                }
            </div>



        </div>
    </div>

}
