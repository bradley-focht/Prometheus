@using Common.Dto
@using Common.Enums
@using DataService.Models
@using Prometheus.WebUI.Helpers
@using Prometheus.WebUI.Models.Service
@model ServiceSectionModel

@{
    ViewBag.Title = "Add " + ServiceSectionHelper.ConvertRouteStringToFriendlyName(Model.Section);
    Layout = "~/Views/Shared/_SidebarLayout.cshtml";

    List<KeyValuePair<string, string>> linkList = new List<KeyValuePair<string, string>> { new KeyValuePair<string, string>("Home", "Home"),
                                                             new KeyValuePair<string, string>("Services", "Service/Index"),
                                                             new KeyValuePair<string, string>(Model.Service.Name, "Service/Show/" + ServiceSectionHelper.ConvertNavStringToRouteString(Model.Section) + "/" + Model.Service.Id)};

    if (Model.Section == "SwotActivity")
    {
        linkList.Add(new KeyValuePair<string, string>(Model.ParentName, "Service/ShowServiceSectionItem/"+ Model.Service.Id + "/Swot/" + Model.SectionItemParentId));
    }

    linkList.Add(new KeyValuePair<string, string>(ViewBag.Title, "#"));
    ViewBag.Links = linkList;

}

@section Sidebar
{
    @Html.Action("ShowServiceList", Model.Service.Id)
}

@section Content
{
    @using (Html.BeginForm("Save" + ServiceSectionHelper.ConvertNavStringToRouteString(Model.Section, true) + "Item", "Service", FormMethod.Post))
    {
            <div class="title-div">
                @ViewBag.Title
            </div>
            <div class="panel">

                @switch (Model.Section)
                {
                    case "Goals":
                        @Html.Partial("PartialViews/UpdateGoalItem", new ServiceGoalDto())
                        break;
                    case "Swot":
                        @Html.Partial("PartialViews/UpdateSwotItem", new ServiceSwotDto {ServiceId = Model.Service.Id, Id = -1})
                        break;
                    case "SwotStrength":
                        @Html.Partial("PartialViews/UpdateSwotItem", new ServiceSwotDto { ServiceId = Model.Service.Id, Type = ServiceSwotType.Strength})
                        break;
                    case "SwotThreat":
                        @Html.Partial("PartialViews/UpdateSwotItem", new ServiceSwotDto { ServiceId = Model.Service.Id, Type = ServiceSwotType.Threat })
                        break;
                    case "SwotOpportunity":
                        @Html.Partial("PartialViews/UpdateSwotItem", new ServiceSwotDto { ServiceId = Model.Service.Id, Type = ServiceSwotType.Opportunity })
                        break;
                    case "SwotWeakness":
                        @Html.Partial("PartialViews/UpdateSwotItem", new ServiceSwotDto { ServiceId = Model.Service.Id, Type = ServiceSwotType.Weakness })
                        break;
                    case "SwotActivity":
                        @Html.Partial("PartialViews/UpdateSwotActivityItem", new SwotActivityItemModel { ServiceId = Model.Service.Id, SwotActivity = new SwotActivity {ServiceSwotId = Model.SectionItemParentId} })
                        break;
                    case "Contracts":
                        @Html.Partial("PartialViews/UpdateDynamicServiceItem", new ServiceContractDto())
                        break;
                    case "Measures":
                        @Html.Partial("PartialViews/UpdateMeasureItem", new ServiceMeasureDto())
                        break;
                    case "WorkUnits":
                        @Html.Partial("PartialViews/UpdateWorkUnitItem", new ServiceWorkUnitDto())
                        break;
                }
            </div>
            <div class="flex-container">
                <div class="panel-footer">
                    <div class="float-right-div">
                        @Html.ActionLink("Back", "Show", new {id = Model.Service.Id, section = Model.Section}, new {@class = "btn btn-default"})
                        <input type="submit" value="Save" class="btn btn-primary"/>
                    </div>
                </div>
            </div>
    }
}


