@using Common.Dto
@using Prometheus.WebUI.Helpers
@model Prometheus.WebUI.Models.Service.ServiceSectionModel
@{
    ViewBag.Title = "Services";
    ViewBag.SubTitle = "Update " + ServiceSectionHelper.ConvertRouteStringToFriendlyName(Model.Section);
    Layout = "~/Views/Shared/_SidebarLayout.cshtml";

    ViewBag.Links = new List<KeyValuePair<string, string>> { new KeyValuePair<string, string>("Home", "Home"),
                                                             new KeyValuePair<string, string>("View Services", "Service/Index"),
                                                             new KeyValuePair<string, string>(Model.Service.Name, "Service/Show/General/" + Model.Service.Id),
                                                             new KeyValuePair<string, string>(ViewBag.Title, "#")};
    bool controlsAvail = true; /* used to enable/disable the buttons */
}

@section Sidebar
{
    @Html.Action("ShowServiceList", Model.Service.Id)
}

@section Content
{
    @using (Html.BeginForm("Save" + ServiceSectionHelper.ConvertNavStringToRouteString(Model.Section) + "Item", "Service", FormMethod.Post))
    {
        <div class="title-div">
            @ViewBag.SubTitle
        </div>
        <div class="panel">
            @switch (Model.Section)
            {
                case "Documents":

                    @Html.Partial("PartialViews/RenameDocument", (ServiceDocumentDto)Model.Service.ServiceDocuments.FirstOrDefault((d => d.StorageNameGuid == Model.SectionItemGuid)))
                    controlsAvail = false;
                    break;
                case "General":
                    @Html.Partial("PartialViews/UpdateGeneral", Model.Service)
                    break;
                case "Goals":
                    @Html.Partial("PartialViews/UpdateDynamicServiceItem", (ServiceGoalDto)Model.Service.ServiceGoals.FirstOrDefault(g => g.Id == Model.SectionItemId))
                    break;
                case "Swot":
                    @Html.Partial("PartialViews/UpdateSwotItem", (ServiceSwotDto)Model.Service.ServiceSwots.FirstOrDefault(s=>s.Id == Model.SectionItemId))
                    break;
                case "WorkUnits":
                    @Html.Partial("PartialViews/UpdateWorkUnitItem", new ServiceWorkUnitDto())
                    break;
                case "Measures":
                    if (Model.Service.ServiceWorkUnits != null && Model.Service.ServiceMeasures.Any())
                    {
                        @Html.Partial("PartialViews/UpdateMeasureItem", (ServiceMeasureDto)Model.Service.ServiceMeasures.FirstOrDefault(g => g.Id == Model.SectionItemId))
                        break;
                    }
                    goto default;
                default:
                    controlsAvail = false;
                    <section class="alert alert-warning">
                        Data no longer exists.
                    </section>
                    break;
            }
        </div>

        if (controlsAvail)
        {

            <div class="flex-container">

                <div class="panel-footer">

                    <div class="float-right-div">
                        @Html.ActionLink("Back", "Show", new {id = Model.Service.Id, section = Model.Section}, new {@class = "btn btn-default"})
                        <input type="submit" value="Save" class="btn btn-primary"/>
                    </div>

                </div>
            </div>
        }
    }
}
