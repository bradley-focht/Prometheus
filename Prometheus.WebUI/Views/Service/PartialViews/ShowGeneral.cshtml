@using Common.Dto
@model ServiceDto
<div class="dd full-width">
	@foreach (var property in ViewData.ModelMetadata.Properties)
    {
        switch (property.PropertyName)
        {
            case "Id":
            case "LifecycleStatusId":
            case "CreatedByUserId":
            case "Popularity":
            case "ServiceGoals":
            case "ServiceSwots":
            case "ServiceContracts":
            case "ServiceWorkUnits":
            case "ServiceOptions":
            case "ServiceProcesses":
            case "ServiceDocuments":
            case "ServiceMeasures":
            case "UpdatedByUserId":
            case "DateUpdated":
            case "DateCreated":
            case "ServiceBundleId":
            case "ServiceBundle":
            case "OptionCategories":
            case "BusinessValue":
                continue;
            case "LifecycleStatusDto":
                var status = property.Model as LifecycleStatusDto;
                if (status != null)
                {
					<div class="dd-row">
						<div class="dt-cell">Lifecycle Status</div>
						<div class="dd-cell tq-width">@status.Name</div>
					</div>
				}
				break;
			case "ServiceIds":
		        <div class="dd-row">
		            <div class="dt-cell">Dependencies</div>
		            <div class="dd-cell tq-width">
		                @property.Model
		            </div>
		        </div>
                <div class="dd-row">
                    <div class="dt-cell">Dependents</div>
                    <div class="dd-cell tq-width">
                        
                    </div>
                </div>  break;
            default:
				<div class="dd-row">
					<div class="dt-cell">@(property.DisplayName ?? property.PropertyName)</div>
					<div class="dd-cell tq-width">@Html.Raw(property.Model)</div>
				</div>
				break;
		}
	}
</div>