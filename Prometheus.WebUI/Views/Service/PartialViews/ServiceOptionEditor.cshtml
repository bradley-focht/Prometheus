@model Common.Dto.IServiceOptionDto

<input type="hidden" name="Id" value="@Model.Id" />

    @foreach (var property in ViewData.ModelMetadata.Properties)
	{
		switch (property.PropertyName)
		{
			case "Id":  /*do nothing for these attributes */
			case "ServiceId":
			case "DateCreated":
			case "DateUpdated":
			case "CreatedByUserId":
			case "UpdatedByUserId":
			case "PictureMimeType":
			case "TextInputs":
			case "ScriptedSelectionInputs":
			case "SelectionInputs":
			case "BasicRequest":
			case "ServiceOptionCategoryId":
			case "Popularity":
			case "Usage":
			case "Code":
			case "Published":
			case "Picture":
			case "Details":
			case "BusinessValue":
				continue;
		}
        <div class="dd-row">
            <div class="dt-cell">@(property.DisplayName ?? property.PropertyName)</div>

            @switch (property.PropertyName)
            {
                case "Name":    /*standard textbox */
                case "Utilization":
                    <div class="dd-cell">
                        @Html.TextBox(property.PropertyName, property.Model, new {@class = "form-control"})
                        @Html.ValidationMessage(property.PropertyName)
                    </div>
                    break;
                case "Includes":    /*ck editor */
                case "Procurement":
                    <div class="dd-cell">
                        @Html.TextArea(property.PropertyName, property.Model?.ToString() ?? "", new { @class = "ckeditor" })
                        @Html.ValidationMessage(property.PropertyName)
                    </div>    break;
                case "Cost":        /*money */
                    <div class="dd-cell">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-usd" aria-hidden="true"></i>
                            </span>
                            @Html.TextBox("Cost", $"{property.Model:0.00}", new { @class = "form-control form-money" })

                        </div>
                        @Html.ValidationMessage(property.PropertyName)
                    </div>    break;
                case "PriceUpFront":
                case "PriceMonthly":
                    <div class="dd-cell">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-usd" aria-hidden="true"></i>
                            </span>
                            @Html.TextBox(property.PropertyName, $"{property.Model:0.00}", new { @class = "form-control form-money" })
                        </div>
                        @Html.ValidationMessage(property.PropertyName)
                    </div>    break;
                case "Description":     /*ck editor + service catalog visible */
                case "Included":
                    <div class="dd-cell">
                        @Html.TextArea(property.PropertyName, property.Model?.ToString() ?? "", new { @class = "ckeditor" })
                        @Html.ValidationMessage(property.PropertyName)
                    </div>    break;
            }

        </div>
    }
