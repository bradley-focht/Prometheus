@using Common.Enums
@using Prometheus.WebUI.Models.ServiceRequest
@model ServiceRequestModel
@{
	int packageCount = 0;   //test if necessary to allow package selection
	if (Model.NewPackage != null) { packageCount++; }
	if (Model.ChangePackage != null) { packageCount++; }
	if (Model.RemovePackage != null) { packageCount++; }
} 



<div class="dd">
	@if (Model.ServiceRequest.Id <= 0)
			{
		@* Add only OR no package specified *@
	if (packageCount > 1)
	{
		<div class="dd-row">
			<div class="dt-cell">Action</div>	@*determine action *@
			<div class="dd-cell">
				<div class="btn-group">
					@if (Model.NewPackage != null)
					{
						<label class="btn btn-primary" id="New">
							@if (Model.SelectedAction == ServiceRequestAction.New)
							{
								<text>New</text>
							}
							else
							{
								@Html.ActionLink("New", "Begin", new { id = Model.ServiceOptionId, ServiceRequestAction = ServiceRequestAction.New }, new { style = "color:#fff;" })
							}
						</label>
					}
					@if (Model.ChangePackage != null)
					{
						<label class="btn btn-primary" id="@ServiceRequestAction.Change">
							@if (Model.SelectedAction == ServiceRequestAction.Change)
							{
								<text>Change</text>
							}
							else
							{
								@Html.ActionLink("Change", "Begin", new { id = Model.ServiceOptionId, ServiceRequestAction = ServiceRequestAction.Change }, new { style = "color:#fff;" })
							}
						</label>
					}
					@if (Model.RemovePackage != null)
					{
						<label class="btn btn-primary" id="@ServiceRequestAction.Remove">
							@if (Model.SelectedAction == ServiceRequestAction.Remove)
						{
								<text>Remove</text>
						}
						else
						{
								@Html.ActionLink("Remove", "Begin", new { id = Model.ServiceOptionId, ServiceRequestAction = ServiceRequestAction.Remove }, new { style = "color:#fff;" })
						}
						</label>
					}
				</div>

				<script type="text/javascript" language="javascript">
					$('#@(Model.SelectedAction)').button('toggle');
				</script>
			</div>
		</div>
		}
	}
	<div class="dd-row">
		<div class="dt-cell">
			Approval Department
		</div>
		<div class="dd-cell">
			<input type="hidden" name="form.DepartmentId" value="1" />
			[ dept name ]
		</div>
	</div>

	<div class="dd-row">
		<div class="dt-cell">Requestor</div>
		<div class="dd-cell">
			@Session["Displayname"]
			<input type="hidden" value="@Session["Guid"].ToString()" name="form.Requestor" />

		</div>
	</div>
	<div class="dd-row">
		<div class="dt-cell">
			Requested For
		</div>
		<div class="dd-cell">
			<div class="dd">
				<div class="dd-row">
					<div class="dd-cell-nostyle">
						<div class="btn-group" data-toggle="buttons">
							<label class="btn btn-default" id="RequesteeMe" onclick="EnableSelector(false)">
								@Html.RadioButton("form.Requestees", Session["Guid"].ToString()) Me
							</label>

							<label class="btn btn-default" id="RequesteeOther" onclick="EnableSelector(true)">
								@Html.RadioButton("form.Requestees", "") Other
							</label>
						</div>
					</div>
					<div class="dd-cell-nostyle make-space-left" id="div_RequesteeSelect" style="display: none;">
						<select name="form.Requestees" id="RequesteesSelect" style="width: 400px" data-val = "true" data-val-required = "Requested for is required"></select>
						@Html.ValidationMessage("form.Requestees")
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="dd-row">
		<div class="dt-cell">Date Required</div>
		<div class="dd-cell">
			<div class="input-group date" data-provide="datepicker">
				@Html.TextBox("form.RequestedDate", Model.RequestedDate > DateTime.MinValue ? Model.RequestedDate.ToString("MM/dd/yyyy") : "", new { @class = "form-control form-date", id = "formRequestedDate", data_val = "true", data_val_required = "Date is required" })
				<span class="input-group-addon" id="formRequestedDateButton"><i class="fa fa-calendar" aria-hidden="true"></i></span>
			</div>
			@Html.ValidationMessage("form.RequestedDate")

			<script language="javascript" type="text/javascript">
				$(function () {
					$('#formRequestedDate')
						.datepicker({
							autoclose: true,
							format: "mm-dd-yyyy"
						});
				});
			</script>
		</div>
	</div>
	<div class="dd-row">
		<div class="dt-cell">Comments</div>
		<div class="dd-cell">
			@Html.TextArea("form.Comments", Model.Comments, new { @class = "ckeditor" })
			<div class="note">additional requests in comments will not be honoured</div>
		</div>
	</div>
	<div class="dd-row">
		<div class="dt-cell">Office-Use</div>
		<div class="dd-cell">@Html.TextBox("form.OfficeUse", Model.OfficeUse, new { @class = "form-control", style="max-width:350px;" })</div>
	</div>
</div>

<script type="text/javascript" language="javascript">
	function EnableSelector(enable) {
		var divSelect = document.getElementById('div_RequesteeSelect');
		if (enable) {
			divSelect.style.display = 'block';
		} else {
			divSelect.style.display = 'none';
		}
	}


	@{
				//figure out requestee info
		Guid userGuid;
		try
		{
			userGuid = Guid.Parse(Session["Guid"].ToString());
		}
		catch (Exception)
		{
			userGuid = Guid.Empty;
		}


		List<string> requesteeGuidStrings;
		if (Model.ServiceRequest.RequestedForGuids != null)
		{
			requesteeGuidStrings = Model.ServiceRequest.RequestedForGuids.Split(',').ToList();
		}
		else
		{
			requesteeGuidStrings = new List<string>();
		}

		List<Guid> userGuids = new List<Guid>();
		foreach (var guid in requesteeGuidStrings)
		{
			try
			{
				userGuids.Add(Guid.Parse(guid));
			}
			catch (Exception)
			{
			}
		}

		if (userGuids.Count <= 1 && userGuids.FirstOrDefault() == userGuid)
		{
			<text> @*write javascript *@
	EnableSelector(false);
	$('#RequesteeMe').button('toggle');
	</text>
		}

	}


	var $select = $(document.getElementById('RequesteesSelect'))
		.selectize({
			maxItems: 99, plugins: ['remove_button'],
			labelField: 'text',
			valueField: 'value'
		});
	var selectize = $select[0].selectize;



	$(document)
		.ready(function () {
			$.get('/Script/GetRequestees/@(Session["Guid"].ToString())',
				function (data) {
					$.each(data, function (i, option) {
						selectize.addOption({ value: option.Value, text: option.Label });
					});
				});
			

			@if (userGuids != null && userGuids.Count > 1)
			{
			<text>
			selectize.refreshOptions();
			EnableSelector(true);
			$('#RequesteeOther').button('toggle');
			</text>
				foreach (var guid in userGuids)
				{
					<text>selectize.addItem('@(guid.ToString())');</text>
				}
			}
			
		}
		);

</script>