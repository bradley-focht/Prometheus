@model Common.Dto.ILifecycleStatusDto

    @using (Html.BeginForm("SaveLifecycle", "ServiceMaintenance", FormMethod.Post))
    {
        <div class="title-div">@ViewBag.Title</div>

        <div class="panel-body">
            @Html.HiddenFor(m => Model.Id)
            <table>
                @foreach (var property in ViewData.ModelMetadata.Properties)
                {
                    if (property.PropertyName.Contains("Id") || property.PropertyName.Contains("Date"))
                    {
                        continue;
                    }

                    <tr>
                        <td class="dt-cell">@(property.DisplayName ?? property.PropertyName)</td>
                        @switch (property.PropertyName)
                    {
                        case "CatalogVisible":


                                <td class="dd-cell">

                                    <div class="form-group">
                                        <div class="btn-group" data-toggle="buttons">
                                            <label class="btn btn-default" id="catalogVisibleFalse">
                                                @Html.RadioButton(property.PropertyName, "false", !(bool)property.Model) no
                                            </label>

                                            <label class="btn btn-default" id="catalogVisibleTrue">
                                                @Html.RadioButton(property.PropertyName, "true", (bool)property.Model) yes
                                            </label>
                                        </div>
                                    </div>
                                    <script language="javascript" type="text/javascript">
                                    @if ((bool) property.Model && Model.Id > 0)
                                    {
                                        <text>$('#catalogVisibleTrue').button('toggle');</text>
                                    }
                                    else if (!(bool) property.Model && Model.Id > 0)
                                    {
                                        <text>$('#catalogVisibleFalse').button('toggle');</text>
                                    }
                                    </script>
                                    @Html.ValidationMessage(property.PropertyName)
                                </td>

                                break;
                            case "Position":
                                <td class="dd-cell">
                                    @Html.DropDownListFor(m => m.Position, Enumerable.Range(1, 15).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))
                                    @Html.ValidationMessage(property.PropertyName)
                                </td>
                                break;
                            default:
                                <td class="dd-cell">
                                    @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
                                    @Html.ValidationMessage(property.PropertyName)
                                </td>
                                break;
                        }
                    </tr>
                }
            </table>
        </div>
            <div class="flex-container">
                <div class="panel-footer">
                    <div class="float-right-div">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>

                    <div class="float-left-div">
                        @Html.ActionLink("Back", "ShowLifecycle", null, new { @class = "btn btn-default" })
                    </div>

                </div>
            </div>

    }