@using Common.Enums
@using Common.Enums.Permissions
@using Prometheus.WebUI.Helpers
@model Prometheus.WebUI.Models.ServiceRequestApproval.ServiceRequestApprovalControls
	@{
		int userId;
		try { userId = int.Parse(Session["Id"].ToString()); }
		catch(Exception) {  return; }

	}
<div class="panel panel-default">
<div class="flex-col" style="padding: 10px;">
	<div class="flex-row">
		<div class="dropdown make-space-right">
			<button class="dropdown-toggle btn btn-default" type="button" id="dropdownMenuButton1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">My Requests</button>

			<ul class="dropdown-menu">
				<li>@Html.ActionLink("All", "AllServiceRequests", null, new {@class = "dropdown-item"})</li>
				<li class="divider"></li>

				<li class="dropdown-submenu">
					<a tabindex="-1" href="#">Status</a>

					<ul class="dropdown-menu">
						@foreach (var state in Enum.GetValues(typeof(ServiceRequestState)))
						{
							var stateString = state.ToString();
							if (stateString != "Cancelled")
							{
								<li>@Html.ActionLink(state.ToString(), "FilterStatus", new {state = stateString})</li>
							}
						}
					</ul>
				</li>
			</ul>
		</div>

		@if (UiPermissionHelper.HasPermission(userId, ApproveServiceRequest.ApproveMinistryRequests) || UiPermissionHelper.HasPermission(userId, ApproveServiceRequest.ApproveAnyRequests))
		{
			<div class="dropdown">
				<button class="dropdown-toggle btn btn-default" type="button" id="dropdownMenuButton2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Department Requests</button>

				<ul class="dropdown-menu">
					<li>@Html.ActionLink("All", "AllDepartmentServiceRequests", null, new {@class = "dropdown-item"})</li>
					<li class="divider"></li>
					<li class="dropdown-submenu">
						<a tabindex="-1" href="#">Status</a>

						<ul class="dropdown-menu">
							@foreach (var srState in Enum.GetValues(typeof(ServiceRequestState)))
							{
								var stateString = srState.ToString();
								if (stateString != "Cancelled" && stateString != "Incomplete")
								{
									<li>@Html.ActionLink(stateString, "FilterDepartmentStatus", new {state = srState })</li>
								}
							}
						</ul>
					</li>
				</ul>
			</div>
		}

		<div class="btn-group make-space-left">
			@if (Model.TotalPages > 1)
			{
				for (int i = 0; i < Model.TotalPages; i++)
				{
					if (Model.CurrentPage == i)
					{
						<span class="btn btn-default active">@(i + 1)</span>
					}
					else
					{
						if (Model.FilterStateRequired)
						{
							@Html.ActionLink((i + 1).ToString(), Model.FilterAction, "ServiceRequestApproval", new {state = Model.FilterState, pageId = i }, new { @class = "btn btn-default" })
						}
						else
						{
							@Html.ActionLink((i + 1).ToString(), Model.FilterAction, "ServiceRequestApproval", new { pageId = i }, new { @class = "btn btn-default" })
						}


					}
				}
			}
		</div>
	</div>
	<div class="make-space-top">@Model.FilterText</div>
</div>
</div>

