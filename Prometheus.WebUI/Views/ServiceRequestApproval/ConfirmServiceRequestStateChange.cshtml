@using Common.Enums
@using Common.Enums.Permissions
@using Prometheus.WebUI.Helpers
@model Prometheus.WebUI.Models.ServiceRequestApproval.ServiceRequestStateChangeModel
@{
	ViewBag.Title = "Service Request";

	switch (Model.NextState)
	{
		case ServiceRequestState.Submitted:
			ViewBag.SubTitle = "Submitting Service Request for Approval";
			break;
		case ServiceRequestState.Cancelled:
			ViewBag.SubTitle = "Cancelling Service Request";
			break;
		case ServiceRequestState.Approved:
			ViewBag.SubTitle = "Approving Service Request";
			break;
		default:
			ViewBag.SubTitle = "Service Request Summary";
			break;
	}

	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Links = new List<KeyValuePair<string, string>>
	{
		new KeyValuePair<string, string>("Home", "Home"),
		new KeyValuePair<string, string>("Service Requests", "ServiceRequestApproval/Index"),
		new KeyValuePair<string, string>(ViewBag.SubTitle, "#")
	};
	int userId;
	try { userId = int.Parse(Session["Id"].ToString()); }
	catch(Exception) { return; }

}

<div class="title-div">@ViewBag.SubTitle</div>

@using (Html.BeginForm($"ChangeState", "ServiceRequestApproval", FormMethod.Post))
{
	<div class="panel-div">
		<div>
			@Html.Partial("PartialViews/_ServiceRequestSummary", Model)
		</div>

		@if (Model.ServiceRequestModel.ServiceRequest.State == ServiceRequestState.Submitted && UiPermissionHelper.HasPermission(userId, ApproveServiceRequest.ApproveDepartmentRequests))
		{
			<div class="dd make-space-top">
				<div class="dd-row">
					<div class="dt-cell">Approver Comments</div>
					<div class="dd-cell">
						@Html.TextArea("Message", "", new {@class = "ckeditor"})
					</div>
				</div>
			</div>
		}

	</div>
	<input type="hidden" value="@Model.ServiceRequestModel.ServiceRequest.Id" name="id" />

	<div class="flex-container-col">
		<div class="panel-footer">
			<div class="float-right-div">
				@Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default btn-back" })
				@if (Model.AvailableStates != null)
				{
					foreach (var state in Model.AvailableStates)
					{
						switch (state)
						{
							case ServiceRequestState.Submitted:
								<button type="submit" value="@state" name="state" class="btn btn-primary">Submit</button>
								break;
							case ServiceRequestState.Cancelled:
								<button type="submit" value="@state" name="state" class="btn btn-danger">Cancel</button>
								break;
							case ServiceRequestState.Denied:
								<button type="submit" value="@state" name="state" class="btn btn-danger">Deny</button>
								break;
							case ServiceRequestState.Approved:
								<button type="submit" value="@state" name="state" class="btn btn-primary">Approve</button>
								break;
							default:
								<button type="submit" value="@state" name="state" class="btn btn-default">Fulfill</button>
								break;
						}
					}

				}
			</div>
		</div>
	</div>
}